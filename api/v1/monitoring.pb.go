// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/v1/monitoring.proto

package apiv1

import (
	_ "entgo.io/contrib/entproto/cmd/protoc-gen-ent/options/ent"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Vendor enum defines Network Device vendors, which are supported by the system.
type Vendor int32

const (
	// This is to comply with Protobuf best practices.
	Vendor_VENDOR_UNSPECIFIED Vendor = 0
	// Ubiquiti,
	Vendor_VENDOR_UBIQUITI Vendor = 1
	// Cisco.
	Vendor_VENDOR_CISCO Vendor = 2
	// Juniper Networks.
	Vendor_VENDOR_JUNIPER Vendor = 3
)

// Enum value maps for Vendor.
var (
	Vendor_name = map[int32]string{
		0: "VENDOR_UNSPECIFIED",
		1: "VENDOR_UBIQUITI",
		2: "VENDOR_CISCO",
		3: "VENDOR_JUNIPER",
	}
	Vendor_value = map[string]int32{
		"VENDOR_UNSPECIFIED": 0,
		"VENDOR_UBIQUITI":    1,
		"VENDOR_CISCO":       2,
		"VENDOR_JUNIPER":     3,
	}
)

func (x Vendor) Enum() *Vendor {
	p := new(Vendor)
	*p = x
	return p
}

func (x Vendor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vendor) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_monitoring_proto_enumTypes[0].Descriptor()
}

func (Vendor) Type() protoreflect.EnumType {
	return &file_api_v1_monitoring_proto_enumTypes[0]
}

func (x Vendor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vendor.Descriptor instead.
func (Vendor) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{0}
}

// Status defines Finite State Machine (FSM) for network device monitoring.
type Status int32

const (
	// This is to comply with Protobuf best practices.
	Status_STATUS_UNSPECIFIED Status = 0
	// Corresponds to Network device is in down (or not reachable state).
	Status_STATUS_DEVICE_DOWN Status = 1
	// Corresponds to the Network device in unhealthy state (as defined internally by the device).
	Status_STATUS_DEVICE_UNHEALTHY Status = 2
	// Corresponds to the Network device in healthy state (i.e., up and running, operating as expected).
	Status_STATUS_DEVICE_UP Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_DEVICE_DOWN",
		2: "STATUS_DEVICE_UNHEALTHY",
		3: "STATUS_DEVICE_UP",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":      0,
		"STATUS_DEVICE_DOWN":      1,
		"STATUS_DEVICE_UNHEALTHY": 2,
		"STATUS_DEVICE_UP":        3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_monitoring_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_api_v1_monitoring_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{1}
}

// Protocol enum defines the supported protocols by monitoring service
type Protocol int32

const (
	// This is to comply with Protobuf best practices.
	Protocol_PROTOCOL_UNSPECIFIED Protocol = 0
	// Corresponds to the SNMP protocol.
	Protocol_PROTOCOL_SNMP Protocol = 1
	// Corresponds to the NETCONF protocol.
	Protocol_PROTOCOL_NETCONF Protocol = 2
	// Corresponds to the RESTCONF protocol.
	Protocol_PROTOCOL_RESTCONF Protocol = 3
	// Corresponds to the Open vSwitch protocol.
	Protocol_PROTOCOL_OPEN_V_SWITCH Protocol = 4
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "PROTOCOL_SNMP",
		2: "PROTOCOL_NETCONF",
		3: "PROTOCOL_RESTCONF",
		4: "PROTOCOL_OPEN_V_SWITCH",
	}
	Protocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED":   0,
		"PROTOCOL_SNMP":          1,
		"PROTOCOL_NETCONF":       2,
		"PROTOCOL_RESTCONF":      3,
		"PROTOCOL_OPEN_V_SWITCH": 4,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_monitoring_proto_enumTypes[2].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_api_v1_monitoring_proto_enumTypes[2]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{2}
}

// GetSummaryResponse provides a summary of the network device monitoring statistics,
type GetSummaryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of the monitored network devices.
	DevicesTotal int32 `protobuf:"varint,1,opt,name=devices_total,json=devicesTotal,proto3" json:"devices_total,omitempty"`
	// Total number of devices in UP state.
	DevicesUp int32 `protobuf:"varint,2,opt,name=devices_up,json=devicesUp,proto3" json:"devices_up,omitempty"`
	// Total number of unhealthy devices.
	DevicesUnhealthy int32 `protobuf:"varint,3,opt,name=devices_unhealthy,json=devicesUnhealthy,proto3" json:"devices_unhealthy,omitempty"`
	// Total number of devices in DOWN state.
	DownDevices   int32 `protobuf:"varint,4,opt,name=down_devices,json=downDevices,proto3" json:"down_devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSummaryResponse) Reset() {
	*x = GetSummaryResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResponse) ProtoMessage() {}

func (x *GetSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetSummaryResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *GetSummaryResponse) GetDevicesTotal() int32 {
	if x != nil {
		return x.DevicesTotal
	}
	return 0
}

func (x *GetSummaryResponse) GetDevicesUp() int32 {
	if x != nil {
		return x.DevicesUp
	}
	return 0
}

func (x *GetSummaryResponse) GetDevicesUnhealthy() int32 {
	if x != nil {
		return x.DevicesUnhealthy
	}
	return 0
}

func (x *GetSummaryResponse) GetDownDevices() int32 {
	if x != nil {
		return x.DownDevices
	}
	return 0
}

// AddDeviceRequest message carries network device that is necessary to add to the monitoring.
type AddDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        *NetworkDevice         `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDeviceRequest) Reset() {
	*x = AddDeviceRequest{}
	mi := &file_api_v1_monitoring_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceRequest) ProtoMessage() {}

func (x *AddDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceRequest.ProtoReflect.Descriptor instead.
func (*AddDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{1}
}

func (x *AddDeviceRequest) GetDevice() *NetworkDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

// AddDeviceResponse carries information about the device that has been added to the monitoring and status of the operation.
type AddDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network device (with assigned internal ID) that has been added to the system.
	Device *NetworkDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// A bool variable to indicate success/failure of the ADD operation.
	Added bool `protobuf:"varint,2,opt,name=added,proto3" json:"added,omitempty"`
	// In case of failure, carries additional information about the reason of failure. Otherwise, empty.
	Details       *string `protobuf:"bytes,3,opt,name=details,proto3,oneof" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddDeviceResponse) Reset() {
	*x = AddDeviceResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeviceResponse) ProtoMessage() {}

func (x *AddDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeviceResponse.ProtoReflect.Descriptor instead.
func (*AddDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{2}
}

func (x *AddDeviceResponse) GetDevice() *NetworkDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *AddDeviceResponse) GetAdded() bool {
	if x != nil {
		return x.Added
	}
	return false
}

func (x *AddDeviceResponse) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

// DeleteDeviceRequest carries information about the network device that should be removed from the monitoring.
type DeleteDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal (for the system) ID of the device.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	mi := &file_api_v1_monitoring_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DeleteDeviceResponse carries information about network device that has been removed from the monitoring.
type DeleteDeviceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal (to the system) ID of the device.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A bool variable that indicates the success/failure of the operation.
	Deleted bool `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// In case of failure, carries additional data, otherwise, empty.
	Details       *string `protobuf:"bytes,3,opt,name=details,proto3,oneof" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDeviceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteDeviceResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *DeleteDeviceResponse) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

// GetDeviceStatusRequest checks the health status on the network device endpoint.
type GetDeviceStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal (to the system) ID of the device.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Network device endpoint
	Endpoint      *Endpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceStatusRequest) Reset() {
	*x = GetDeviceStatusRequest{}
	mi := &file_api_v1_monitoring_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStatusRequest) ProtoMessage() {}

func (x *GetDeviceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{5}
}

func (x *GetDeviceStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDeviceStatusRequest) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

// GetDeviceStatusResponse carries the result of the health check for the network device.
type GetDeviceStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Internal (to the system) ID of the device.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Internal (to the system) ID of the device.
	Endpoint *Endpoint `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Status of the device
	Status        *DeviceStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceStatusResponse) Reset() {
	*x = GetDeviceStatusResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStatusResponse) ProtoMessage() {}

func (x *GetDeviceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{6}
}

func (x *GetDeviceStatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDeviceStatusResponse) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *GetDeviceStatusResponse) GetStatus() *DeviceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// UpdateDeviceListRequest contains a list of the devices (including theirs' details) to be updated.
type UpdateDeviceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*NetworkDevice       `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceListRequest) Reset() {
	*x = UpdateDeviceListRequest{}
	mi := &file_api_v1_monitoring_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceListRequest) ProtoMessage() {}

func (x *UpdateDeviceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceListRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceListRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDeviceListRequest) GetDevices() []*NetworkDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

// UpdateDeviceListResponse contains full list of the network devices within the system, once update has been performed.
type UpdateDeviceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*NetworkDevice       `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeviceListResponse) Reset() {
	*x = UpdateDeviceListResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceListResponse) ProtoMessage() {}

func (x *UpdateDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceListResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDeviceListResponse) GetDevices() []*NetworkDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

// GetDeviceListResponse contains full list of the network devices within the monitoring system.
type GetDeviceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*NetworkDevice       `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceListResponse) Reset() {
	*x = GetDeviceListResponse{}
	mi := &file_api_v1_monitoring_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceListResponse) ProtoMessage() {}

func (x *GetDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceListResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeviceListResponse) GetDevices() []*NetworkDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

// NetworkDevice message defines Network device data structure,
type NetworkDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is a device ID assigned internally by the Monitoring service. it is internal to the system.
	// Later, by this ID, it is possible to retrieve any information about the device.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Network device vendor.
	Vendor Vendor `protobuf:"varint,2,opt,name=vendor,proto3,enum=api.v1.Vendor" json:"vendor,omitempty"`
	// Network device model.
	Model string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	// Network device endpoint. Device may contain several network endpoints (e.g., support of different protocols).
	Endpoints []*Endpoint `protobuf:"bytes,10,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	// HW version (i.e., HW revision, different from model version).
	HwVersion string `protobuf:"bytes,20,opt,name=hw_version,json=hwVersion,proto3" json:"hw_version,omitempty"` // this is to not require this field to be set, when User creates this resour
	// SW version (i.e., SW revision).
	SwVersion *Version `protobuf:"bytes,21,opt,name=sw_version,json=swVersion,proto3" json:"sw_version,omitempty"`
	// FW version (i.e., FW revision).
	FwVersion     *Version `protobuf:"bytes,22,opt,name=fw_version,json=fwVersion,proto3" json:"fw_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDevice) Reset() {
	*x = NetworkDevice{}
	mi := &file_api_v1_monitoring_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDevice) ProtoMessage() {}

func (x *NetworkDevice) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDevice.ProtoReflect.Descriptor instead.
func (*NetworkDevice) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkDevice) GetVendor() Vendor {
	if x != nil {
		return x.Vendor
	}
	return Vendor_VENDOR_UNSPECIFIED
}

func (x *NetworkDevice) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *NetworkDevice) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *NetworkDevice) GetHwVersion() string {
	if x != nil {
		return x.HwVersion
	}
	return ""
}

func (x *NetworkDevice) GetSwVersion() *Version {
	if x != nil {
		return x.SwVersion
	}
	return nil
}

func (x *NetworkDevice) GetFwVersion() *Version {
	if x != nil {
		return x.FwVersion
	}
	return nil
}

// DeviceStatus reports the status opf the network device including the time when it was last seen in the UP or unhealthy state.
type DeviceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the device status resource internally assigned by the controller.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Current status of the Network device.
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=api.v1.Status" json:"status,omitempty"`
	// A timestamp when the device was last seen in the UP or unhealthy state.
	LastSeen      string         `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"` // originally supposed to be 'google.protobuf.Timestamp', but ent generation made problems for that.
	NetworkDevice *NetworkDevice `protobuf:"bytes,10,opt,name=network_device,json=networkDevice,proto3" json:"network_device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceStatus) Reset() {
	*x = DeviceStatus{}
	mi := &file_api_v1_monitoring_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStatus) ProtoMessage() {}

func (x *DeviceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStatus.ProtoReflect.Descriptor instead.
func (*DeviceStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{11}
}

func (x *DeviceStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *DeviceStatus) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *DeviceStatus) GetNetworkDevice() *NetworkDevice {
	if x != nil {
		return x.NetworkDevice
	}
	return nil
}

// Endpoint defines an endpoint structure.
type Endpoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the device status resource internally assigned by the controller.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Host address in CIDR form of IP or FQDN, if applicable.
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Port number, where device health point is reachable.
	Port string `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	// Supported by the network device protocol for communicating over this endpoint.
	Protocol      Protocol       `protobuf:"varint,10,opt,name=protocol,proto3,enum=api.v1.Protocol" json:"protocol,omitempty"`
	NetworkDevice *NetworkDevice `protobuf:"bytes,50,opt,name=network_device,json=networkDevice,proto3" json:"network_device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_api_v1_monitoring_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{12}
}

func (x *Endpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Endpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Endpoint) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Endpoint) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_PROTOCOL_UNSPECIFIED
}

func (x *Endpoint) GetNetworkDevice() *NetworkDevice {
	if x != nil {
		return x.NetworkDevice
	}
	return nil
}

// Version message is a generic message for reporting a version.
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the device status resource internally assigned by the controller.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// SW/FW Version number.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Checksum of the current revision.
	Checksum      string `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_api_v1_monitoring_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_monitoring_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_api_v1_monitoring_proto_rawDescGZIP(), []int{13}
}

func (x *Version) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Version) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

var File_api_v1_monitoring_proto protoreflect.FileDescriptor

const file_api_v1_monitoring_proto_rawDesc = "" +
	"\n" +
	"\x17api/v1/monitoring.proto\x12\x06api.v1\x1a\x15api/v1/ent/opts.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\"\xa8\x01\n" +
	"\x12GetSummaryResponse\x12#\n" +
	"\rdevices_total\x18\x01 \x01(\x05R\fdevicesTotal\x12\x1d\n" +
	"\n" +
	"devices_up\x18\x02 \x01(\x05R\tdevicesUp\x12+\n" +
	"\x11devices_unhealthy\x18\x03 \x01(\x05R\x10devicesUnhealthy\x12!\n" +
	"\fdown_devices\x18\x04 \x01(\x05R\vdownDevices\"A\n" +
	"\x10AddDeviceRequest\x12-\n" +
	"\x06device\x18\x01 \x01(\v2\x15.api.v1.NetworkDeviceR\x06device\"\x83\x01\n" +
	"\x11AddDeviceResponse\x12-\n" +
	"\x06device\x18\x01 \x01(\v2\x15.api.v1.NetworkDeviceR\x06device\x12\x14\n" +
	"\x05added\x18\x02 \x01(\bR\x05added\x12\x1d\n" +
	"\adetails\x18\x03 \x01(\tH\x00R\adetails\x88\x01\x01B\n" +
	"\n" +
	"\b_details\"%\n" +
	"\x13DeleteDeviceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"k\n" +
	"\x14DeleteDeviceResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\bR\adeleted\x12\x1d\n" +
	"\adetails\x18\x03 \x01(\tH\x00R\adetails\x88\x01\x01B\n" +
	"\n" +
	"\b_details\"V\n" +
	"\x16GetDeviceStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\bendpoint\x18\x02 \x01(\v2\x10.api.v1.EndpointR\bendpoint\"\x85\x01\n" +
	"\x17GetDeviceStatusResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\bendpoint\x18\x02 \x01(\v2\x10.api.v1.EndpointR\bendpoint\x12,\n" +
	"\x06status\x18\x03 \x01(\v2\x14.api.v1.DeviceStatusR\x06status\"J\n" +
	"\x17UpdateDeviceListRequest\x12/\n" +
	"\adevices\x18\x01 \x03(\v2\x15.api.v1.NetworkDeviceR\adevices\"K\n" +
	"\x18UpdateDeviceListResponse\x12/\n" +
	"\adevices\x18\x01 \x03(\v2\x15.api.v1.NetworkDeviceR\adevices\"H\n" +
	"\x15GetDeviceListResponse\x12/\n" +
	"\adevices\x18\x01 \x03(\v2\x15.api.v1.NetworkDeviceR\adevices\"\xb2\x02\n" +
	"\rNetworkDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x06vendor\x18\x02 \x01(\x0e2\x0e.api.v1.VendorR\x06vendor\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\x124\n" +
	"\tendpoints\x18\n" +
	" \x03(\v2\x10.api.v1.EndpointB\x04¦I\x00R\tendpoints\x12%\n" +
	"\n" +
	"hw_version\x18\x14 \x01(\tB\x06\xba\xa6I\x02\b\x01R\thwVersion\x126\n" +
	"\n" +
	"sw_version\x18\x15 \x01(\v2\x0f.api.v1.VersionB\x06¦I\x02\b\x01R\tswVersion\x126\n" +
	"\n" +
	"fw_version\x18\x16 \x01(\v2\x0f.api.v1.VersionB\x06¦I\x02\b\x01R\tfwVersion:\x06\xba\xa6I\x02\b\x01\"\xb9\x01\n" +
	"\fDeviceStatus\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12&\n" +
	"\x06status\x18\x02 \x01(\x0e2\x0e.api.v1.StatusR\x06status\x12#\n" +
	"\tlast_seen\x18\x03 \x01(\tB\x06\xba\xa6I\x02\b\x01R\blastSeen\x12D\n" +
	"\x0enetwork_device\x18\n" +
	" \x01(\v2\x15.api.v1.NetworkDeviceB\x06¦I\x02\b\x01R\rnetworkDevice:\x06\xba\xa6I\x02\b\x01\"\xc9\x01\n" +
	"\bEndpoint\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x03 \x01(\tR\x04port\x12,\n" +
	"\bprotocol\x18\n" +
	" \x01(\x0e2\x10.api.v1.ProtocolR\bprotocol\x12O\n" +
	"\x0enetwork_device\x182 \x01(\v2\x15.api.v1.NetworkDeviceB\x11¦I\r\b\x01\x12\tendpointsR\rnetworkDevice:\x06\xba\xa6I\x02\b\x01\"W\n" +
	"\aVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1a\n" +
	"\bchecksum\x18\x03 \x01(\tR\bchecksum:\x06\xba\xa6I\x02\b\x01*[\n" +
	"\x06Vendor\x12\x16\n" +
	"\x12VENDOR_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fVENDOR_UBIQUITI\x10\x01\x12\x10\n" +
	"\fVENDOR_CISCO\x10\x02\x12\x12\n" +
	"\x0eVENDOR_JUNIPER\x10\x03*k\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12STATUS_DEVICE_DOWN\x10\x01\x12\x1b\n" +
	"\x17STATUS_DEVICE_UNHEALTHY\x10\x02\x12\x14\n" +
	"\x10STATUS_DEVICE_UP\x10\x03*\x80\x01\n" +
	"\bProtocol\x12\x18\n" +
	"\x14PROTOCOL_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rPROTOCOL_SNMP\x10\x01\x12\x14\n" +
	"\x10PROTOCOL_NETCONF\x10\x02\x12\x15\n" +
	"\x11PROTOCOL_RESTCONF\x10\x03\x12\x1a\n" +
	"\x16PROTOCOL_OPEN_V_SWITCH\x10\x042\xb5\x05\n" +
	"\x17DeviceMonitoringService\x12x\n" +
	"\x10UpdateDeviceList\x12\x1f.api.v1.UpdateDeviceListRequest\x1a .api.v1.UpdateDeviceListResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*2\x16/v1/monitoring/devices\x12f\n" +
	"\rGetDeviceList\x12\x16.google.protobuf.Empty\x1a\x1d.api.v1.GetDeviceListResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/monitoring/devices\x12c\n" +
	"\tAddDevice\x12\x18.api.v1.AddDeviceRequest\x1a\x19.api.v1.AddDeviceResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/monitoring/devices\x12q\n" +
	"\fDeleteDevice\x12\x1b.api.v1.DeleteDeviceRequest\x1a\x1c.api.v1.DeleteDeviceResponse\"&\x82\xd3\xe4\x93\x02 :\x01**\x1b/v1/monitoring/devices/{id}\x12~\n" +
	"\x0fGetDeviceStatus\x12\x1e.api.v1.GetDeviceStatusRequest\x1a\x1f.api.v1.GetDeviceStatusResponse\"*\x82\xd3\xe4\x93\x02$\x12\"/v1/monitoring/devices/{id}/status\x12`\n" +
	"\n" +
	"GetSummary\x12\x16.google.protobuf.Empty\x1a\x1a.api.v1.GetSummaryResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/monitoring/summaryB<Z:github.com/eroshiva/trade-show-poc/api/v1/monitoring;apiv1b\x06proto3"

var (
	file_api_v1_monitoring_proto_rawDescOnce sync.Once
	file_api_v1_monitoring_proto_rawDescData []byte
)

func file_api_v1_monitoring_proto_rawDescGZIP() []byte {
	file_api_v1_monitoring_proto_rawDescOnce.Do(func() {
		file_api_v1_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_monitoring_proto_rawDesc), len(file_api_v1_monitoring_proto_rawDesc)))
	})
	return file_api_v1_monitoring_proto_rawDescData
}

var file_api_v1_monitoring_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_v1_monitoring_proto_goTypes = []any{
	(Vendor)(0),                      // 0: api.v1.Vendor
	(Status)(0),                      // 1: api.v1.Status
	(Protocol)(0),                    // 2: api.v1.Protocol
	(*GetSummaryResponse)(nil),       // 3: api.v1.GetSummaryResponse
	(*AddDeviceRequest)(nil),         // 4: api.v1.AddDeviceRequest
	(*AddDeviceResponse)(nil),        // 5: api.v1.AddDeviceResponse
	(*DeleteDeviceRequest)(nil),      // 6: api.v1.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),     // 7: api.v1.DeleteDeviceResponse
	(*GetDeviceStatusRequest)(nil),   // 8: api.v1.GetDeviceStatusRequest
	(*GetDeviceStatusResponse)(nil),  // 9: api.v1.GetDeviceStatusResponse
	(*UpdateDeviceListRequest)(nil),  // 10: api.v1.UpdateDeviceListRequest
	(*UpdateDeviceListResponse)(nil), // 11: api.v1.UpdateDeviceListResponse
	(*GetDeviceListResponse)(nil),    // 12: api.v1.GetDeviceListResponse
	(*NetworkDevice)(nil),            // 13: api.v1.NetworkDevice
	(*DeviceStatus)(nil),             // 14: api.v1.DeviceStatus
	(*Endpoint)(nil),                 // 15: api.v1.Endpoint
	(*Version)(nil),                  // 16: api.v1.Version
	(*emptypb.Empty)(nil),            // 17: google.protobuf.Empty
}
var file_api_v1_monitoring_proto_depIdxs = []int32{
	13, // 0: api.v1.AddDeviceRequest.device:type_name -> api.v1.NetworkDevice
	13, // 1: api.v1.AddDeviceResponse.device:type_name -> api.v1.NetworkDevice
	15, // 2: api.v1.GetDeviceStatusRequest.endpoint:type_name -> api.v1.Endpoint
	15, // 3: api.v1.GetDeviceStatusResponse.endpoint:type_name -> api.v1.Endpoint
	14, // 4: api.v1.GetDeviceStatusResponse.status:type_name -> api.v1.DeviceStatus
	13, // 5: api.v1.UpdateDeviceListRequest.devices:type_name -> api.v1.NetworkDevice
	13, // 6: api.v1.UpdateDeviceListResponse.devices:type_name -> api.v1.NetworkDevice
	13, // 7: api.v1.GetDeviceListResponse.devices:type_name -> api.v1.NetworkDevice
	0,  // 8: api.v1.NetworkDevice.vendor:type_name -> api.v1.Vendor
	15, // 9: api.v1.NetworkDevice.endpoints:type_name -> api.v1.Endpoint
	16, // 10: api.v1.NetworkDevice.sw_version:type_name -> api.v1.Version
	16, // 11: api.v1.NetworkDevice.fw_version:type_name -> api.v1.Version
	1,  // 12: api.v1.DeviceStatus.status:type_name -> api.v1.Status
	13, // 13: api.v1.DeviceStatus.network_device:type_name -> api.v1.NetworkDevice
	2,  // 14: api.v1.Endpoint.protocol:type_name -> api.v1.Protocol
	13, // 15: api.v1.Endpoint.network_device:type_name -> api.v1.NetworkDevice
	10, // 16: api.v1.DeviceMonitoringService.UpdateDeviceList:input_type -> api.v1.UpdateDeviceListRequest
	17, // 17: api.v1.DeviceMonitoringService.GetDeviceList:input_type -> google.protobuf.Empty
	4,  // 18: api.v1.DeviceMonitoringService.AddDevice:input_type -> api.v1.AddDeviceRequest
	6,  // 19: api.v1.DeviceMonitoringService.DeleteDevice:input_type -> api.v1.DeleteDeviceRequest
	8,  // 20: api.v1.DeviceMonitoringService.GetDeviceStatus:input_type -> api.v1.GetDeviceStatusRequest
	17, // 21: api.v1.DeviceMonitoringService.GetSummary:input_type -> google.protobuf.Empty
	11, // 22: api.v1.DeviceMonitoringService.UpdateDeviceList:output_type -> api.v1.UpdateDeviceListResponse
	12, // 23: api.v1.DeviceMonitoringService.GetDeviceList:output_type -> api.v1.GetDeviceListResponse
	5,  // 24: api.v1.DeviceMonitoringService.AddDevice:output_type -> api.v1.AddDeviceResponse
	7,  // 25: api.v1.DeviceMonitoringService.DeleteDevice:output_type -> api.v1.DeleteDeviceResponse
	9,  // 26: api.v1.DeviceMonitoringService.GetDeviceStatus:output_type -> api.v1.GetDeviceStatusResponse
	3,  // 27: api.v1.DeviceMonitoringService.GetSummary:output_type -> api.v1.GetSummaryResponse
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_v1_monitoring_proto_init() }
func file_api_v1_monitoring_proto_init() {
	if File_api_v1_monitoring_proto != nil {
		return
	}
	file_api_v1_monitoring_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_v1_monitoring_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_monitoring_proto_rawDesc), len(file_api_v1_monitoring_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_monitoring_proto_goTypes,
		DependencyIndexes: file_api_v1_monitoring_proto_depIdxs,
		EnumInfos:         file_api_v1_monitoring_proto_enumTypes,
		MessageInfos:      file_api_v1_monitoring_proto_msgTypes,
	}.Build()
	File_api_v1_monitoring_proto = out.File
	file_api_v1_monitoring_proto_goTypes = nil
	file_api_v1_monitoring_proto_depIdxs = nil
}
