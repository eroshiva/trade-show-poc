// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DeviceStatusColumns holds the columns for the "device_status" table.
	DeviceStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"STATUS_UNSPECIFIED", "STATUS_DEVICE_DOWN", "STATUS_DEVICE_UNHEALTHY", "STATUS_DEVICE_UP"}},
		{Name: "last_seen", Type: field.TypeString},
	}
	// DeviceStatusTable holds the schema information for the "device_status" table.
	DeviceStatusTable = &schema.Table{
		Name:       "device_status",
		Columns:    DeviceStatusColumns,
		PrimaryKey: []*schema.Column{DeviceStatusColumns[0]},
	}
	// EndpointsColumns holds the columns for the "endpoints" table.
	EndpointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "host", Type: field.TypeString},
		{Name: "port", Type: field.TypeString},
		{Name: "protocol", Type: field.TypeEnum, Enums: []string{"PROTOCOL_UNSPECIFIED", "PROTOCOL_SNMP", "PROTOCOL_NETCONF", "PROTOCOL_RESTCONF", "PROTOCOL_OPEN_V_SWITCH"}},
	}
	// EndpointsTable holds the schema information for the "endpoints" table.
	EndpointsTable = &schema.Table{
		Name:       "endpoints",
		Columns:    EndpointsColumns,
		PrimaryKey: []*schema.Column{EndpointsColumns[0]},
	}
	// NetworkDevicesColumns holds the columns for the "network_devices" table.
	NetworkDevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "vendor", Type: field.TypeEnum, Enums: []string{"VENDOR_UNSPECIFIED", "VENDOR_UBIQUITI", "VENDOR_CISCO", "VENDOR_JUNIPER"}},
		{Name: "model", Type: field.TypeString},
		{Name: "hw_version", Type: field.TypeString},
	}
	// NetworkDevicesTable holds the schema information for the "network_devices" table.
	NetworkDevicesTable = &schema.Table{
		Name:       "network_devices",
		Columns:    NetworkDevicesColumns,
		PrimaryKey: []*schema.Column{NetworkDevicesColumns[0]},
	}
	// VersionsColumns holds the columns for the "versions" table.
	VersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString},
		{Name: "checksum", Type: field.TypeString},
		{Name: "network_device_sw_version", Type: field.TypeString, Nullable: true},
		{Name: "network_device_fw_version", Type: field.TypeString, Nullable: true},
	}
	// VersionsTable holds the schema information for the "versions" table.
	VersionsTable = &schema.Table{
		Name:       "versions",
		Columns:    VersionsColumns,
		PrimaryKey: []*schema.Column{VersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "versions_network_devices_sw_version",
				Columns:    []*schema.Column{VersionsColumns[3]},
				RefColumns: []*schema.Column{NetworkDevicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "versions_network_devices_fw_version",
				Columns:    []*schema.Column{VersionsColumns[4]},
				RefColumns: []*schema.Column{NetworkDevicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NetworkDeviceEndpointColumns holds the columns for the "network_device_endpoint" table.
	NetworkDeviceEndpointColumns = []*schema.Column{
		{Name: "network_device_id", Type: field.TypeString},
		{Name: "endpoint_id", Type: field.TypeInt},
	}
	// NetworkDeviceEndpointTable holds the schema information for the "network_device_endpoint" table.
	NetworkDeviceEndpointTable = &schema.Table{
		Name:       "network_device_endpoint",
		Columns:    NetworkDeviceEndpointColumns,
		PrimaryKey: []*schema.Column{NetworkDeviceEndpointColumns[0], NetworkDeviceEndpointColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "network_device_endpoint_network_device_id",
				Columns:    []*schema.Column{NetworkDeviceEndpointColumns[0]},
				RefColumns: []*schema.Column{NetworkDevicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "network_device_endpoint_endpoint_id",
				Columns:    []*schema.Column{NetworkDeviceEndpointColumns[1]},
				RefColumns: []*schema.Column{EndpointsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DeviceStatusTable,
		EndpointsTable,
		NetworkDevicesTable,
		VersionsTable,
		NetworkDeviceEndpointTable,
	}
)

func init() {
	VersionsTable.ForeignKeys[0].RefTable = NetworkDevicesTable
	VersionsTable.ForeignKeys[1].RefTable = NetworkDevicesTable
	NetworkDeviceEndpointTable.ForeignKeys[0].RefTable = NetworkDevicesTable
	NetworkDeviceEndpointTable.ForeignKeys[1].RefTable = EndpointsTable
}
